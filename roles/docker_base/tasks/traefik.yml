---
# tasks file for docker_traefik
- name: generate admin passwd for traefik
  set_fact:
    traefik_passwd: "{{ lookup('password', '{{ selfhosted_credential_store }}/traefik_api_password chars=ascii_letters,digits length=32') }}"
  when: traefik_passwd == ''
  
- name: install python docker
  pip:
    name:
      - pip
      - passlib
      - bcrypt
    state: latest

- name: ensures traefik dir exists
  file:
    path: "{{ traefik_config_dir }}"
    state: directory
    owner: root
    group: "{{ ansible_env.SUDO_USER | default('root') }}"

- name: ensures acme.json file exists
  file:
    path:  "{{ traefik_config_dir }}/acme.json"
    state: touch
    owner: root
    group: root
    mode:  0600

- name: adding traefik.toml file
  template:
    src:     traefik.toml.j2
    dest:    "{{ traefik_config_dir }}/traefik.toml"
    owner:   root
    group:   root

- name: 'Create traefik container'
  docker_container:
    name: traefik
    image: traefik:{{ docker_traefik_image | default('latest') }}
    restart_policy: unless-stopped
    networks:
      - name: frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "{{ traefik_config_dir }}/traefik.toml:/etc/traefik/traefik.toml"
      - "{{ traefik_config_dir }}/acme.json:/acme.json"
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.frontend.rule:                         "Host:{{ app_server_fqdn }}; PathPrefixStrip:/traefik"
      traefik.docker.network:                        "frontend"
      traefik.port:                                  "8080"
      traefik.enable:                                "true"
      traefik.frontend.headers.referrerPolicy:       "no-referrer"
      traefik.frontend.headers.SSLRedirect:          "true"
      traefik.frontend.headers.STSSeconds:           "315360000"
      traefik.frontend.headers.browserXSSFilter:     "true"
      traefik.frontend.headers.contentTypeNosniff:   "true"
      traefik.frontend.headers.forceSTSHeader:       "true"
      traefik.frontend.headers.STSIncludeSubdomains: "true"
      traefik.frontend.headers.STSPreload:           "true"
      traefik.frontend.headers.frameDeny:            "true"
      com.centurylinklabs.watchtower.enable:         '{{ watchtower_traefik }}'

- name: 'Create the traefik cert dumper container'
  docker_container:
    name:           'certdumper'
    image:          'svendowideit/traefik-certdumper:{{ docker_watchtower_certdumper_image }}'
    restart_policy: 'unless-stopped'
    purge_networks: true
    volumes:        '{{ traefik_config_dir }}:/traefik'
    labels:         
      com.centurylinklabs.watchtower.enable: '{{ watchtower_certdumper_traefik }}'
